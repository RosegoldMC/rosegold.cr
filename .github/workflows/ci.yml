name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  CheckFormat:
    if: github.repository != 'grepsedawk/sharded.cr'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - uses: oprypin/install-crystal@v1
        with:
          crystal: 1.17.0

      - name: Format
        run: crystal tool format --check

      - name: Set up Crystal cache
        uses: actions/cache@v4
        id: crystal-cache
        with:
          path: |
            ~/.cache/crystal
            bin/ameba
            lib
          key: ${{ runner.os }}-crystal-${{ matrix.crystal_version }}-${{ hashFiles('**/shard.yml') }}

      - name: Install shards
        if: steps.crystal-cache.outputs.cache-hit != 'true'
        run: shards check || shards install --ignore-crystal-version

      - name: Run ameba linter
        run: ./bin/ameba

  RunSpecs:
    if: github.repository != 'grepsedawk/sharded.cr'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        crystal_version:
          - "1.17.0"
          # - latest
        minecraft_version:
          - "1.18.2"
          - "1.21"
          - "1.21.4"
          - "1.21.6"
          - "1.21.8"
        experimental:
          - false

    steps:
      - uses: actions/checkout@v2.4.0

      - run: |
          cd spec
          if [ "${{ matrix.minecraft_version }}" = "1.18.2" ]; then
            docker compose -f docker-compose.1.18.yml up -d
          elif [ "${{ matrix.minecraft_version }}" = "1.21" ]; then
            docker compose -f docker-compose.1.21.yml up -d
          elif [ "${{ matrix.minecraft_version }}" = "1.21.4" ]; then
            docker compose -f docker-compose.1.21.4.yml up -d
          elif [ "${{ matrix.minecraft_version }}" = "1.21.6" ]; then
            docker compose -f docker-compose.1.21.6.yml up -d
          elif [ "${{ matrix.minecraft_version }}" = "1.21.8" ]; then
            docker compose -f docker-compose.1.21.8.yml up -d
          else
            docker compose -f docker-compose.yml up -d
          fi
          sleep 30 # TODO: Wait for the container to be ready

      - uses: oprypin/install-crystal@v1
        with:
          crystal: ${{ matrix.crystal_version }}

      - name: Set up Crystal cache
        uses: actions/cache@v4
        id: crystal-cache
        with:
          path: |
            ~/.cache/crystal
            bin/ameba
            lib
          key: ${{ runner.os }}-crystal-${{ matrix.crystal_version }}-${{ hashFiles('**/shard.yml') }}

      - name: Install shards
        if: steps.crystal-cache.outputs.cache-hit != 'true'
        run: shards check || shards install --ignore-crystal-version

      - name: Create .env
        run: touch .env

      - name: Run tests
        run: LOG_LEVEL=DEBUG crystal spec || crystal spec || crystal spec
